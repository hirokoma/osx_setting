# エイリアス
alias rm='rm -i'
alias ud='cd ../'
alias mecab="mecab -d /usr/local/lib/mecab/dic/mecab-ipadic-neologd"

# lsに色を付ける
if [ "$(uname)" = 'Darwin' ]; then
  export LSCOLORS=exfxcxdxcxegedabagacad
  alias ls='ls -G'
else
  eval `dircolors ~/.colorrc`
  alias ls='ls --color=auto'
fi

# brew経由でのrbenvインストール時, ローカルrbenvを使用するか
# /usr/local/var/rbenvを使用するか選択可能. 後者の場合, 以下
# をbash_profileに追記
export RBENV_ROOT=/usr/local/var/rbenv
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

# brew経由でのpyenvインストール時, ローカルpyenvを使用するか
# /usr/local/var/pyenvを使用するか選択可能. 後者の場合, 以下
# をbash_profileに追記
export PYENV_ROOT=/usr/local/var/pyenv
if which pyenv > /dev/null; then eval "$(pyenv init -)"; fi

# brew経由でpyenvインストール後, pyenv配下の*-configファイル
# のファイル名に関する警告が出るのを防ぐため, brew実行時のPATH
# を変更
alias brew="env PATH=${PATH/\/usr\/local\/var\/pyenv\/shims:/} brew"

# brew経由でnodebrewをインストールする際, インストールディレク
# トリを指定する必要がある. また, ディレクトリが存在しない場合
# インストールに失敗するため, 予め作成しておく必要がある.
export NODEBREW_ROOT=/usr/local/var/nodebrew
export PATH=$NODEBREW_ROOT/current/bin:$PATH
dir=/usr/local/var/nodebrew/src; [ ! -e $dir ] && mkdir -p $dir

# Chainer/CUDA用の環境変数
export PATH=/usr/local/cuda/bin:$PATH
export CPATH=/usr/local/cuda/include:$CPATH
export LD_LIBRARY_PATH=/usr/local/cuda/lib:$LD_LIBRARY_PATH
export DYLD_LIBRARY_PATH=/usr/local/cuda/lib:$DYLD_LIBRARY_PATH

# 起動のたびにパッケージを更新
brew update && brew upgrade
pip install --upgrade pip
npm install -g npm


